{"version":3,"file":"EnsController.js","sourceRoot":"","sources":["../../src/third-party/EnsController.ts"],"names":[],"mappings":"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","sourcesContent":["import { isValidAddress, toChecksumAddress } from 'ethereumjs-util';\nimport BaseController, { BaseConfig, BaseState } from '../BaseController';\nimport { normalizeEnsName } from '../util';\n\n/**\n * @type EnsEntry\n *\n * ENS entry representation\n *\n * @property chainId - Id of the associated chain\n * @property ensName - The ENS name\n * @property address - Hex address with the ENS name, or null\n */\nexport interface EnsEntry {\n\tchainId: string;\n\tensName: string;\n\taddress: string | null;\n}\n\n/**\n * @type EnsState\n *\n * ENS controller state\n *\n * @property ensEntries - Object of ENS entry objects\n */\nexport interface EnsState extends BaseState {\n\tensEntries: { [chainId: string]: { [ensName: string]: EnsEntry } };\n}\n\n/**\n * Controller that manages a list ENS names and their resolved addresses\n * by chainId. A null address indicates an unresolved ENS name.\n */\nexport class EnsController extends BaseController<BaseConfig, EnsState> {\n\t/**\n\t * Name of this controller used during composition\n\t */\n\tname = 'EnsController';\n\n\t/**\n\t * Creates an EnsController instance\n\t *\n\t * @param config - Initial options used to configure this controller\n\t * @param state - Initial state to set on this controller\n\t */\n\tconstructor(config?: Partial<BaseConfig>, state?: Partial<EnsState>) {\n\t\tsuper(config, state);\n\n\t\tthis.defaultState = { ensEntries: {} };\n\n\t\tthis.initialize();\n\t}\n\n\t/**\n\t * Remove all chain Ids and ENS entries from state\n\t */\n\tclear() {\n\t\tthis.update({ ensEntries: {} });\n\t}\n\n\t/**\n\t * Delete an ENS entry.\n\t *\n\t * @param chainId - Parent chain of the ENS entry to delete\n\t * @param ensName - Name of the ENS entry to delete\n\t *\n\t * @returns - Boolean indicating if the entry was deleted\n\t */\n\tdelete(chainId: string, ensName: string): boolean {\n\t\tconst normalizedEnsName = normalizeEnsName(ensName);\n\t\tif (\n\t\t\t!normalizedEnsName ||\n\t\t\t!this.state.ensEntries[chainId] ||\n\t\t\t!this.state.ensEntries[chainId][normalizedEnsName]\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst ensEntries = Object.assign({}, this.state.ensEntries);\n\t\tdelete ensEntries[chainId][normalizedEnsName];\n\n\t\tif (Object.keys(ensEntries[chainId]).length === 0) {\n\t\t\tdelete ensEntries[chainId];\n\t\t}\n\n\t\tthis.update({ ensEntries });\n\t\treturn true;\n\t}\n\n\t/**\n\t * Retrieve a DNS entry.\n\t *\n\t * @param chainId - Parent chain of the ENS entry to retrieve\n\t * @param ensName - Name of the ENS entry to retrieve\n\t *\n\t * @returns - The EnsEntry or null if it does not exist\n\t */\n\tget(chainId: string, ensName: string): EnsEntry | null {\n\t\tconst normalizedEnsName = normalizeEnsName(ensName);\n\n\t\treturn !!normalizedEnsName && this.state.ensEntries[chainId]\n\t\t\t? this.state.ensEntries[chainId][normalizedEnsName] || null\n\t\t\t: null;\n\t}\n\n\t/**\n\t * Add or update an ENS entry by chainId and ensName.\n\t *\n\t * A null address indicates that the ENS name does not resolve.\n\t *\n\t * @param chainId - Id of the associated chain\n\t * @param ensName - The ENS name\n\t * @param address - Associated address (or null) to add or update\n\t *\n\t * @returns - Boolean indicating if the entry was set\n\t */\n\tset(chainId: string, ensName: string, address: string | null): boolean {\n\t\tif (\n\t\t\t!Number.isInteger(Number.parseInt(chainId, 10)) ||\n\t\t\t!ensName ||\n\t\t\ttypeof ensName !== 'string' ||\n\t\t\t(address && !isValidAddress(address))\n\t\t) {\n\t\t\tthrow new Error(`Invalid ENS entry: { chainId:${chainId}, ensName:${ensName}, address:${address}}`);\n\t\t}\n\n\t\tconst normalizedEnsName = normalizeEnsName(ensName);\n\t\tif (!normalizedEnsName) {\n\t\t\tthrow new Error(`Invalid ENS name: ${ensName}`);\n\t\t}\n\n\t\tconst normalizedAddress = address ? toChecksumAddress(address) : null;\n\t\tconst subState = this.state.ensEntries[chainId];\n\n\t\tif (subState && subState[normalizedEnsName] && subState[normalizedEnsName].address === normalizedAddress) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.update({\n\t\t\tensEntries: {\n\t\t\t\t...this.state.ensEntries,\n\t\t\t\t[chainId]: {\n\t\t\t\t\t...this.state.ensEntries[chainId],\n\t\t\t\t\t[normalizedEnsName]: {\n\t\t\t\t\t\taddress: normalizedAddress,\n\t\t\t\t\t\tchainId,\n\t\t\t\t\t\tensName: normalizedEnsName\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn true;\n\t}\n}\n\nexport default EnsController;\n"]}